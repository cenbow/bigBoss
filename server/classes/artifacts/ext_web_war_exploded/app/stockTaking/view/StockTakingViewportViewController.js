/*
 * File: app/view/StockTakingViewportViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('StockTaking.view.StockTakingViewportViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.stocktakingviewport',
  options: {
    downLoad: function () {
      Ext.create('StockTaking.view.DownloadStockTakingWindow').show()
    },
    upLoad: function () {
      Ext.create('StockTaking.view.UploadStockTakingResultWindow').show()
    },
    manulAdd: function () {
      var window = Ext.create('StockTaking.view.StockTakingDetailWindow');
      Ext.getCmp('btnSaveApprove').show();
      Ext.getCmp('btnSaveDraft').show();
      Ext.getCmp('girdTool').getComponent('add').show();
      Ext.getCmp('girdTool').getComponent('fastSearchField').show();
      Ext.getCmp('wcDel').show();
      //window.getViewModel().set('typeId',null);
      window.show();
    },
    search: function(button){
      var form = button.ownerCt;
      if (!form.isValid()) {
        Ext.MessageBox.show({
          title : '错误',
          headerPosition: 'bottom',
          modal: true,
          msg : '查询条件格式不正确.',
          buttons : Ext.MessageBox.OK,
          icon : Ext.MessageBox.WARNING
        });
        return;
      }

      var formData = form.getValues();
      if(!formData.stockTakingDateFrom){
        delete formData.stockTakingDateFrom
      }
      if(!formData.stockTakingDateTo){
        delete formData.stockTakingDateTo
      }
      var store = Ext.data.StoreManager.getByKey('GridStore');
      store.getProxy().extraParams = formData;
      store.load();
    },
    empty: function(button){
      var form = button.ownerCt;
      form.reset();
      var store = Ext.data.StoreManager.getByKey('GridStore');
      store.getProxy().extraParams = {};
      store.load();
    },
    update: function(button){
      var record = button.ownerCt.getWidgetRecord();
      this.loadWindowData('update',record);
    },
    audit: function(button){
      var record = button.ownerCt.getWidgetRecord();
      this.loadWindowData('audit',record);
    },
    view : function(button){
      var record = button.ownerCt.getWidgetRecord();
      this.loadWindowData('view',record);
    },
    cancel: function(button){
      var record = button.ownerCt.getWidgetRecord();
      if(record.get('status') === 'DRAFT'){
        Ext.MessageBox.confirm('盘点单取消', '确认将这张盘点单取消吗？', function(option) {
          if(option == 'yes'){
            Ext.Ajax.request({
              url: '/api/inventory/stock/taking/cancel',
              method: 'POST',
              params:{
                id:record.get('id')
              },
              success: function(response, opts) {
                var res = JSON.parse(response.responseText);
                if(res.success){
                  Ext.data.StoreManager.lookup('GridStore').reload();
                }else{
                  Ext.Msg.alert("提示",res.error.message);
                }
              }
            });
          }
        });
      }else{
        Ext.Msg.show({
          title: '错误',
          message: '非草稿状态无法取消',
          buttons : Ext.MessageBox.OK,
          icon: Ext.Msg.WARNING
        });
      }
    },
    loadWindowData: function (type,record) {
      var window = Ext.create('StockTaking.view.StockTakingDetailWindow');
      var model = window.getViewModel();

      if(type == 'update'){
        Ext.getCmp('btnSaveApprove').show();
        Ext.getCmp('btnSaveDraft').show();
        Ext.getCmp('girdTool').getComponent('viewSearchField').show();
        Ext.getCmp('wcDel').show();
      }else if(type == 'audit'){
        Ext.getCmp('btnPass').show();
        Ext.getCmp('btnReturn').show();
        Ext.getCmp('girdTool').hide();
        Ext.getCmp('wcDel').hide();
      }else if(type == 'view'){
        Ext.getCmp('girdTool').getComponent('viewSearchField').show();
        Ext.getCmp('wcDel').hide();
        model.set('isView',true);
      }

      model.set('isReadOnly',true);
      model.set('isNotUpdate', function () {
        if(type == 'update'){
          return false;
        }else{
          return true;
        }
      }());

      model.set('whsId',record.get('whsId'));
      var form = window.down('form').loadRecord(record);
      var commonwhsareastore = model.get('commonwhsareastore');

      Ext.create('Common.ux.StoreLoadCoordinator', {
        stores: commonwhsareastore,
        listeners: {
          load: function () {
            //等仓库和库区的store加载完了再获取数据
            var store = model.getStore('detailGridStore');
            store.load({params:{takingId: record.get('id')}});
          }
        }
      });

      window.show();
    }
  },

  onCommandColumnClick: function (button, e) {
    Ext.isFunction(this.options[button.command]) && this.options[button.command](button);
  },

  renderStatus: function(status,obj,store){
    return Ext.data.StoreManager.lookup('StockTakingStatusStore').findRecord('key',status).get('value');
  },

  renderType: function(type){
    return Ext.data.StoreManager.lookup('StockTakingTypeStore').findRecord('type',type).get('value');
  }
});
