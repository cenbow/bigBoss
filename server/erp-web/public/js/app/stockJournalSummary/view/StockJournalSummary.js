/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('StockJournalSummary.view.StockJournalSummary', {
  extend: 'Ext.container.Viewport',
  alias: 'widget.stockjournalsummary',

  requires: [
    'StockJournalSummary.view.StockJournalSummaryViewController',
    'StockJournalSummary.view.StockJournalSummaryViewModel',
    'Ext.grid.Panel',
    'Ext.grid.column.RowNumberer',
    'Ext.grid.column.Number',
    'Ext.grid.column.Date',
    'Ext.view.Table',
    'Ext.form.field.Date',
    'Ext.form.field.ComboBox',
    'Ext.button.Button'
  ],
  controller: 'stockjournalsummary',
  viewModel: {
    type: 'stockjournalsummary'
  },
  layout: 'fit',

  items: [
    {
      xtype: 'gridpanel',
      header: false,
      store: 'GridStore',
      viewConfig: {
        enableTextSelection: true
      },
      columns: {
        defaults: {
          cls:'titleAlign'
        },
        items: [
          {
            xtype: 'rownumberer',
            width: 50,
            text: '序号'
          },
          /*{
           xtype: 'gridcolumn',
           dataIndex: 'id',
           text: 'ID'
           },*/
          {
            xtype: 'datecolumn',
            dataIndex: 'createDate',
            text: '创建时间',
            formatter: 'date("Y/m/d H:i:s")',
            width: 140,
            align: 'center'
          },
          {
            xtype: 'datecolumn',
            dataIndex: 'postDate',
            text: '过账时间',
            formatter: 'date("Y/m/d H:i:s")',
            width: 140,
            align: 'center'
          },
          {
            xtype: 'gridcolumn',
            dataIndex: 'productCode',
            text: '商品编码',
            width: 120
          },
          {
            xtype: 'gridcolumn',
            dataIndex: 'skuCode',
            text: '规格编码',
            width: 120
          },
          {
            xtype: 'gridcolumn',
            dataIndex: 'skuName',
            text: '规格名称',
            width: 140
          },
          {
            xtype: 'gridcolumn',
            dataIndex: 'isReceipt',
            text: '出/入库',
            width: 60
          },
          {
            xtype: 'gridcolumn',
            dataIndex: 'baseType',
            text: '单据类型'
          },
          {
            xtype: 'gridcolumn',
            dataIndex: 'baseNo',
            text: '对应系统单号',
            width: 160
          },
          {
            xtype: 'gridcolumn',
            dataIndex: 'whsName',
            text: '仓库名称'
          },
          {
            xtype: 'gridcolumn',
            dataIndex: 'whsAreaName',
            text: '库区名称'
          },
          {
            xtype: 'gridcolumn',
            text: '变化前',
            defaults: {
              align: 'center'
            },
            columns: [
              {
                xtype: 'gridcolumn',
                dataIndex: 'beforeAreaQty',
                text: '库区原库存',
                align: 'right'
              },
              {
                xtype: 'gridcolumn',
                dataIndex: 'beforeQty',
                text: '仓库原库存',
                align: 'right'
              },
              {
                xtype: 'numbercolumn',
                dataIndex: 'beforePrice',
                text: '仓库原库存单价',
                align: 'right'
              },
              {
                xtype: 'numbercolumn',
                dataIndex: 'beforeValue',
                text: '仓库原成本合计',
                align: 'right'
              }
            ]
          },
          {
            xtype: 'gridcolumn',
            text: '变化值',
            defaults: {
              align: 'center'
            },
            columns: [
              {
                xtype: 'gridcolumn',
                dataIndex: 'changeQty',
                text: '库存变化数',
                align: 'right'
              },
              {
                xtype: 'numbercolumn',
                dataIndex: 'changeTotal',
                text: '成本变化合计',
                align: 'right'
              }
            ]
          },
          {
            xtype: 'gridcolumn',
            text: '变化后',
            defaults: {
              align: 'center'
            },
            columns: [
              {
                xtype: 'gridcolumn',
                dataIndex: 'afterAreaQty',
                text: '库区新库存',
                align: 'right'
              },
              {
                xtype: 'gridcolumn',
                dataIndex: 'afterQty',
                text: '仓库新库存',
                align: 'right'
              },
              {
                xtype: 'numbercolumn',
                dataIndex: 'afterPrice',
                text: '仓库新库存单价',
                align: 'right'
              },
              {
                xtype: 'numbercolumn',
                dataIndex: 'afterValue',
                text: '仓库新成本合计',
                align: 'right'
              }
            ]
          }
        ]
      },
      dockedItems: [
        {
          xtype: 'form',
          reference: 'form',
          dock: 'top',
          defaultButton: "searchBtn",
          width: 100,
          defaults: {
            columnWidth: 0.2,
            //padding:'10 0 5 5',
            margin: 7,
            labelWidth: 80
          },
          layout: 'column',
          items: [
            {
              xtype: 'datefield',
              name: 'createDateFrom',
              fieldLabel: '开始时间',
              editable: false,
              value: function () {
                var date = new Date();
                return new Date(date.getFullYear(), date.getMonth(), 1);
              }(),
              format: "Y/n/j",
              listeners: {
                select : function(view, fromValue) {
                  var form = view.up('form');
                  var postDateTo = form.getComponent('createDateTo');
                  postDateTo.setMinValue(fromValue);
                  var toValue = postDateTo.getValue();
                  if(toValue < fromValue) {
                    postDateTo.setValue('');
                  }
                }
              }
            },
            {
              xtype: 'datefield',
              itemId: 'createDateTo',
              name: 'createDateTo',
              fieldLabel: '结束时间',
              format: "Y/n/j",
              value: new Date()
            },
            {
              xtype: 'combobox',
              name: 'isReceipt',
              fieldLabel: '出/入库',
              store: 'StockRecordStatusStock',
              queryMode: 'local',
              displayField: 'value',
              value: '',
              valueField: 'key',
              editable: false
            },
            {
              xtype: 'combobox',
              name: 'whsId',
              fieldLabel: '仓库',
              editable: false,
              queryMode: 'local',
              displayField: 'name',
              valueField: 'id',
              emptyText: '请选择',
              bind: {
                store: '{commonwhsstore}'
              },
              listeners: {
                select: function (filed, newValue) {
                  Ext.data.StoreManager.lookup('commonwhsareastore').load({id: newValue.get('id')});
                  filed.next().reset();
                }
              }
            },
            {
              xtype: 'combobox',
              name: 'whsAreaId',
              fieldLabel: '库区',
              editable: false,
              queryMode: 'local',
              displayField: 'name',
              valueField: 'id',
              emptyText: '请选择',
              bind: {
                store: '{commonwhsareastore}'
              }
            },
            {
              xtype: 'combobox',
              name: 'baseType',
              fieldLabel: '单据类型',
              store: 'StockJournalBaseTypeStore',
              queryMode: 'local',
              displayField: 'value',
              value: '',
              valueField: 'key',
              editable: false
            },
            {
              xtype: 'textfield',
              name: 'baseNo',
              fieldLabel: '对应系统单号'
            },
            {
              xtype: 'textfield',
              name: 'skuCodes',
              columnWidth: 0.4,
              fieldLabel: '商品信息',
              reference: 'text',
              emptyText: '规格编码(多个商品以逗号分隔)',
              triggers: {
                mytrigger: {
                  handler: 'onButtonGoodsChooseClick',
                  cls: 'x-form-ellipsis-trigger'
                }
              }
            },
            {
              xtype: 'container',
              columnWidth: 0.2,
              layout: {
                type: 'anchor'
              },
              defaults: {
                handler: 'onCommandColumnClick',
                anchor: '50%'
              },
              items: [
                {
                  xtype: 'button',
                  reference: 'searchBtn',
                  iconCls: 'btn-search',
                  command: 'query',
                  text: '查询',
                  margin: '0 15% 0 0'
                },
                {
                  xtype: 'button',
                  iconCls: 'btn-clear',
                  command: 'empty',
                  margin: '0 0 0 15%',
                  text: '清空'
                }
              ]
            }
          ]
        },
        {
          xtype: 'pagingtoolbar',
          dock: 'bottom',
          displayInfo: true,
          store: 'GridStore',
          plugins: [
            Ext.create("Ext.ux.ProgressBarPager"),
            Ext.create("Common.ux.PagingToolbarResizer", {})
          ]
        }
      ]
    }
  ]

});