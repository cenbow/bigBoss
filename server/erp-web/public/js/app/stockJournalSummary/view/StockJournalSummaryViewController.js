/*
 * File: app/view/MyViewportViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('StockJournalSummary.view.StockJournalSummaryViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.stockjournalsummary',
    options:{
      empty:function(form){
        form.reset();
        Ext.data.StoreManager.getByKey('commonwhsareastore').removeAll();
        var store = Ext.data.StoreManager.getByKey('GridStore');
        store.getProxy().extraParams = {};
        store.load();
      },
      query:function(form){
        if (!form.isValid()) {
          Ext.MessageBox.show({
            title : '错误',
            headerPosition: 'bottom',
            modal: true,
            msg : '查询条件格式不正确.',
            buttons : Ext.MessageBox.OK,
            icon : Ext.MessageBox.WARNING
          });
          return;
        }

        var formData = form.getValues();
        if(!formData.startTime){
          delete formData.startTime
        }
        if(!formData.endTime){
          delete formData.endTime
        }
        var store = Ext.data.StoreManager.getByKey('GridStore');
        store.getProxy().extraParams = formData;
        store.load()
      }
    },

    onButtonGoodsChooseClick:function(field){
      //this.lookupReference('text')
      var dialog = Ext.create('Common.view.GoodsChooseDialog',{
        callback:function(records){
          var arr = [];
          if(!records){
            return;
          }
          Ext.Array.each(records,function(record){
            arr.push(record.skuCode);
          });
          //var _cache = this.getViewModel().get("gridStore").skuCache;
          //for(var key in _cache){
          //  arr.push(_cache[key]);
          //}

          field.setValue(arr.join(','));
        }
      });
      var dialogStore = dialog.getViewModel().get("gridStore");
      //
      //dialogStore.skuCache ={};
      //if(field.getValue()&&field.getValue().trim()){
      //  var values = field.getValue().trim().split(',');
      //  Ext.Array.each(values,function(skuCode){
      //    dialogStore.skuCache[skuCode] = skuCode;
      //  });
      //}
      dialogStore.load();
      //dialogStore.on('load',function(store,records){
      //  var _records = [];
      //  Ext.Array.each(records,function(record){
      //    var code = record.get('skuCode');
      //    if(store.skuCache[code]){
      //      _records.push(record);
      //    }
      //  });
      //  dialog.down('grid').getSelectionModel().select(_records,false,true);
      //});
      //dialog.down('grid').getSelectionModel().on('select',function(sel,record){
      //  var code = record.get('skuCode');
      //  dialogStore.skuCache[code] = code;
      //});
      //dialog.down('grid').getSelectionModel().on('deselect',function(sel,record){
      //  var code = record.get('skuCode');
      //  delete dialogStore.skuCache[code];
      //});
      dialog.show();
    },

    onCommandColumnClick:function(button){
      Ext.isFunction(this.options[button.command])
        &&this.options[button.command](this.lookupReference('form'));
    }
});
