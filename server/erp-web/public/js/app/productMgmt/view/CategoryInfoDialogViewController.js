/*
 * File: app/view/SelectAddEditProductMenuViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProductMgmt.view.CategoryInfoDialogViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.categoryinfodialog',

  init: function() {
    var viewCtr = this;

    viewCtr.getViewModel().set("formData", {
      parentId:null,
      parentName: null,
      name: null,
      isParent: null,
      customsCatId: null,
      noNeedSubmitRate: null,
      sortOrder: null,
      path: null,
      level: null
    });
  },

  /**
   * 保存
   */
  onSaveButtonClick: function() {
    var viewCtr = this,
      currWin = viewCtr.getView(),
      viewModel = viewCtr.getViewModel(),
      formCmp = currWin.down("form"),
      url = '/api/product/category';

    if (!formCmp.isValid()) {
      TipsUtil.showTips("提示", "信息填写有误", TipsUtil.WARING);
      return ;
    }

    var formData = viewModel.get("formData"),
        addFlag = viewModel.get('addFlag');

    if (addFlag) {
      if (formData.isParent) {
        formData.isParent = "Y";
        viewCtr._deleteFormDataByKeys(formData, ['customsCatId', 'noNeedSubmitRate', 'parentName']);
      } else {
        formData.isParent = "N";
        viewCtr._deleteFormDataByKeys(formData, ['parentName', 'noNeedSubmitRate']);
      }
      formData.url = url + '/add';
    } else {
      var delKeys = [];
      if (formData.isParent) {
        delKeys = delKeys.concat(['customsCatId', 'noNeedSubmitRate']);
      }
      delKeys = delKeys.concat(['parentId', 'parentName','isParent',
        'noNeedSubmitRate', 'sortOrder', 'path', 'level']);
      viewCtr._deleteFormDataByKeys(formData, delKeys);

      formData.url = url + '/update';
    }

    currWin.el.mask("正在保存，请稍候...");

    DoActionUtil.request(
      'POST',
      formData.url,
      formData,
      function(result) {
        currWin.el.unmask();
        if (result.success) {
          TipsUtil.showTips("提示", result.data, TipsUtil.INFO, function() {
            viewModel.get("referController")._refreshLeftcategorytreestore();
            currWin.close();
          });
        } else {
          TipsUtil.showTips("提示", result.error.message, TipsUtil.WARING, function() {
            currWin.close();
          });
      }
  }
    );
  },

  /**
   * 取消
   */
  onCancelButtonClick: function() {
    var viewCtr = this;

    viewCtr.closeView();
  },

  /**
   * combobox选中操作
   */
  onComboxSelectAction: function(combo, record, eOpts) {
    var viewCtr = this,
        viewModel = viewCtr.getViewModel();

    viewModel.set('formData.noNeedSubmitRate', record.get('taxRate'));
  },


  /**
   * 删除keys对应的数据
   * @private
   */
  _deleteFormDataByKeys: function(formData, keys) {
    Ext.Array.each(keys, function(key) {
      if (formData.hasOwnProperty(key)) {
        delete formData[key];
      }
    });
  }
});
