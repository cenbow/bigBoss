/*
 * File: app/view/EditDialogViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProductMgmt.view.ProductInfoDialogViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.productinfodialog',

  /**
   * 保存
   */
  onSaveButtonClick: function () {
    var viewCtr = this,
        currWin = viewCtr.getView(),
        viewModel = viewCtr.getViewModel(),
        formData  = viewModel.get('formData'),
        formCmp = viewCtr.getView().down('form'),
        productInfoGridStore = viewCtr.getStore('skugridstore'),
        url = '/api/product/add',
        gridDatas, requestOptions, validateErrorInfo;

    if (!formCmp.isValid()) {
      TipsUtil.showTips("提示", "数据填写不完整，请检查后重新操作", TipsUtil.WARING);
      return ;
    }

    validateErrorInfo = productInfoGridStore.getValidateErrorMessage();
    if (validateErrorInfo.length > 0) {
      TipsUtil.showTips("提示", validateErrorInfo.join('<br/>'), TipsUtil.WARING);
      return ;
    }

    formData.productCatId = Number(formData.productCatId);
    gridDatas = productInfoGridStore.getCurrPageDatas();

    requestOptions = Ext.clone(formData);
    requestOptions.skuList = gridDatas;

    currWin.el.mask("正在保存，请稍候...");

    if (formData.id) {
      url = '/api/product/update';
    }
    Ext.Ajax.request({
      url: url,
      params : {
        data: Ext.JSON.encode(requestOptions)
      },
      method : 'POST',
      timeout :60000,
      success : function(response, options) {
        var result = Ext.JSON.decode(response.responseText), recs;

        currWin.el.unmask();

        if (result.success) {
          TipsUtil.showTips("提示", result.data, TipsUtil.INFO, function() {
            recs = [].concat(productInfoGridStore.getNewRecords()).concat(productInfoGridStore.getUpdatedRecords());

            Ext.Array.each(recs, function(item) {
              item.set('isFromDb', true);
              item.commit();
            });
            productInfoGridStore.addCounts = 0;
            viewModel.get('referController').getStore('centergridstore').load();
            viewCtr.closeView();
          });

        } else {
          TipsUtil.showTips("提示", result.error.message, TipsUtil.WARING);
        }
      },
      failure : function(response, options) {
        currWin.el.unmask();
        TipsUtil.showTips('提示', "[" + response.status + "]: " + options.url + ":" + response.statusText, TipsUtil.ERROR);
      }
    });
  },

  /**
   * 取消
   */
  onCancelButtonClick: function () {
    var viewCtr = this,
        productInfoGridStore = viewCtr.getStore('skugridstore');

    if (productInfoGridStore.isDirty()) {
      Ext.MessageBox.confirm("警告", "当前页面数据已被修改，是否丢弃已修改的数据？", function(btnId) {
        if (btnId == 'yes') {
          productInfoGridStore.rejectChanges();
          viewCtr.closeView();
        }
      });
    } else {
      viewCtr.closeView();
    }

  },

  /**
   * 添加一条记录
   */
  onAddNewSkuButtonClick: function() {
    var viewCtr = this,
      productInfoGridStore = viewCtr.getStore('skugridstore');;

    productInfoGridStore.addCounts = (++productInfoGridStore.addCounts) || 1;
    productInfoGridStore.insertNewRec();
  },

  /**
   * 删除一条记录
   */
  onDeleteOneRecordButtonClick: function(btn) {
    var viewCtr = this,
        record = btn.ownerCt.getWidgetRecord();
        productInfoGridStore = viewCtr.getStore('skugridstore');

    productInfoGridStore.addCounts = --productInfoGridStore.addCounts;
    productInfoGridStore.remove(record);
  },

  onCellBeforeEdit: function(editor, context, eOpts ) {
    if (context.colIdx == 1 || context.colIdx == 2) {
      if (context.record.get('isFromDb')) {
        return false;
      }
    }
    return true;
  },

  /**
   * 填充数据
   */
  onPopulateOperate: function(cmp, e, options) {

    if (e.getKey() !== e.ENTER) {
      return ;
    }

    var viewCtr = this,
        productInfoGridStore = viewCtr.getStore('skugridstore');

    if (productInfoGridStore.getCount() == 0) {
      TipsUtil.showTips("提示", '当前没有可填充的记录', TipsUtil.WARING);
      cmp.reset();
      return ;
    }

    if ((!cmp.getValue() && cmp.getValue() != 0) || !cmp.isValid()) {
      TipsUtil.showTips("提示", '填充值格式不正确，无法填充', TipsUtil.WARING);
      cmp.reset();
      return ;
    }

    productInfoGridStore.populateDataByAsignField(cmp.modelField, cmp.getValue());
  }
});
