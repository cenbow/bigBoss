/*
 * File: app/view/CenterSalesPlatformDialogViewModel.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ProductMgmt.view.SalesPlatformDialogViewModel', {
  extend: 'Ext.app.ViewModel',
  alias: 'viewmodel.salesplatformdialog',
  requires: [
    'ProductMgmt.store.SalesPlatformGridStore',
    'ProductMgmt.store.CommonComboboxStore'
  ],

  data: {
    skuId: ''
  },

  stores: {
    gridstore: {
      type: 'salesplatformgridstore',
      proxy: {
        type: 'ajax',
        url: '/api/product/sku/platform/list',
        reader: {
          type: 'json',
          rootProperty: 'data'
        }
      },

      insertNewRec: function(skuId) {
        var store = this, model = store.getModel(),
          rec;

        rec = new model({
          skuId: skuId,
          platform: '',
          property: '',
        });

        store.insert(0, rec);
      },

      isDirty: function() {
        var store = this,
          dirty;

        dirty = store.getModifiedRecords().length
        dirty = dirty || store.getNewRecords().length;
        dirty = dirty || store.getRemovedRecords().length;
        dirty = dirty || store.addCounts;

        return !!dirty;
      },

      getCurrPageDatas: function(skuId) {
        var store = this,
          resultArray = [];

        if (store.getCount() == 0) {
          return ;
        }

        store.each(function(item) {
          var data = Ext.clone(item.data);
          if (!data.createDate) {
            data.skuId = skuId;
            delete data.id;
          }
          resultArray.push(data);
        });

        return resultArray;
      },

      getValidateErrorMessage: function() {
        var store = this,
          validateKeys = ["platform", "property"],
          validateResult = [];

        var rowNum = 0;
        store.each(function(item) {
          rowNum++;
          if (!item.isValid()) {
            //var vali = item.getValidation();
            var error = item.validate();
            var temp = [];
            Ext.Array.each(validateKeys, function(key) {
              var errorInfo = error.get(key);
              if (errorInfo && item.data.hasOwnProperty(key)) {
                temp.push(errorInfo.getMessage());
              }
            });
            if (temp.length > 0) {
              validateResult.push('第' + rowNum + '行数据:' + temp.join(' ; '))
            }
          }
        });

        return validateResult;
      }
    },

    platformstore: {
      type:'productmgmt.commoncomboboxstore',
      url: '/api/product/platform/list',
      idMapping: 'code',
      autoLoad: true
    }
  }
});