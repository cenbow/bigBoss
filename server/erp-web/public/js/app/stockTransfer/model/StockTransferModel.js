/*
 * File: app/model/StockTransferModel.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('StockTransfer.model.StockTransferModel', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.field.Integer',
        'Ext.data.field.String',
        'Ext.data.field.Date'
    ],

    idProperty: 'baseId',

    fields: [
        {
            type: 'int',
            name: 'baseId'
        },
        {
            type: 'string',
            name: 'baseNo'
        },
        {
            type: 'string',
            name: 'status'
        },
        {
            name: 'stateName'
        },
        {
            type: 'int',
            name: 'fromWhsId'
        },
        {
            type: 'string',
            name: 'fromWhsName'
        },
        {
            type: 'int',
            name: 'fromWhsAreaId'
        },
        {
            type: 'string',
            name: 'fromWhsAreaName'
        },
        {
            type: 'int',
            name: 'toWhsId'
        },
        {
            type: 'string',
            name: 'toWhsName'
        },
        {
            type: 'int',
            name: 'toWhsAreaId'
        },
        {
            type: 'string',
            name: 'toWhsAreaName'
        },
        {
            type: 'date',
            name: 'postDate',
            convert: function (value) {
                return value ? new Date(Number(value)) : "";
            }
        },
        {
            type: 'string',
            name: 'memo'
        },
        {
            type: 'int',
            name: 'createBy'
        },
        {
            type: 'string',
            name: 'createByName'
        },
        {
            type: 'date',
            name: 'createDate',
            convert: function (value) {
                return value ? new Date(Number(value)) : "";
            }
        },
        {
            type: 'int',
            name: 'updateBy'
        },
        {
            type: 'string',
            name: 'updateByName'
        },
        {
            type: 'date',
            name: 'updateDate',
            convert: function (value) {
                return value ? new Date(Number(value)) : "";
            }
        }
    ]
});