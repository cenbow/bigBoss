/*
 * File: app/view/RowSliceDialogViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('OrderReview.view.RowSliceDialogViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.rowslicedialog',

  /*确定*/
  onButtonOkClick: function (button, e, eOpts) {
    var viewCtr = this;
    var viewModel = viewCtr.getViewModel();
    var referStore = viewModel.get('referStore');
    var referRecord = viewModel.get('referRecord');
    var row1Value = Number(viewCtr.lookupReference('row1').getValue());
    var row2Value = Number(viewCtr.lookupReference('row2').getValue());

    if (!(row1Value && row2Value) ) {
      TipsUtil.showTips('提示', '数据填写有误，请检查后重新操作...', TipsUtil.WARING);
      return ;
    }

    var ReferModel = referStore.getModel();
    var newData = Ext.clone(referRecord.getData());
    delete newData.id;
    var newRec = new ReferModel(newData);

    referRecord.set('A06', row1Value);
    newRec.set('A06', row2Value);
    referStore.add(newRec);

    referStore.commitChanges( );
    viewCtr.closeView();
  },

  /*取消*/
  onButtonCancelClick: function (button, e, eOpts) {
    var viewCtr = this;
    var row2Value = Number(viewCtr.lookupReference('row2').getValue());

    if (row2Value != 1) {
      Ext.MessageBox.confirm("警告", "当前页面数据已被修改，是否丢弃已修改的数据？", function (btnId) {
        if (btnId == 'yes') {
          viewCtr.closeView();
        }
      });
      return ;
    }
    viewCtr.closeView();
  },

  /*行1回车*/
  onNumberfieldRow1EnterSpecialkey: function (field, e, eOpts) {
    if (e.getKey() == Ext.EventObject.ENTER) {
      var viewCtr = this;
      viewCtr._recalcAnotherRowQuantity(field, viewCtr.lookupReference('row2'));
    }
  },

  /*行1向下调整*/
  onNumberfieldRow1Spindown: function (spinnerfield, eOpts) {
    var viewCtr = this;
    viewCtr._recalcAnotherRowQuantity(spinnerfield, viewCtr.lookupReference('row2'));
  },

  /*行1向上调整*/
  onNumberfieldRow1Spinup: function (spinnerfield, eOpts) {
    var viewCtr = this;
    viewCtr._recalcAnotherRowQuantity(spinnerfield, viewCtr.lookupReference('row2'));
  },

  /*行1值变化*/
  onNumberfieldRow1Change: function(field, newValue, oldValue, eOpts) {
    var viewCtr = this;
    var referRecord = viewCtr.getViewModel().get('referRecord');

    if (newValue > (Number(referRecord.get('A06')) - 1) ||  newValue == 0) {
      field.setValue(oldValue);
      return false;
    }

    viewCtr._recalcAnotherRowQuantity(field, viewCtr.lookupReference('row2'));
  },

  /*行2按钮减少*/
  onButtonRow2ReduceClick: function (button, e, eOpts) {
    var viewCtr = this;
    var row2Cmp = viewCtr.lookupReference('row2');
    row2Cmp.setValue(row2Cmp.getValue() - 1 );
  },

  /*行2回车*/
  onNumberfieldRow2EnterSpecialkey: function (field, e, eOpts) {
  },

  /*行2增加*/
  onButtonRow2IncreaseClick: function (button, e, eOpts) {
    var viewCtr = this;
    var row2Cmp = viewCtr.lookupReference('row2');
    row2Cmp.setValue(Number(row2Cmp.getValue() + 1 ));
  },

  /*行2值变化*/
  onNumberfieldRow2Change: function(field, newValue, oldValue, eOpts) {
    var viewCtr = this;
    var referRecord = viewCtr.getViewModel().get('referRecord');
    var reduceBtn = field.previousNode();
    var increaseBtn = field.nextNode();

    if (newValue > (Number(referRecord.get('A06')) - 1) ||  newValue == 0) {
      field.setValue(oldValue);
      return false;
    }

    if (newValue == (Number(referRecord.get('A06')) - 1)) {
      increaseBtn.setDisabled(true);
    } else if (newValue == 1) {
      reduceBtn.setDisabled(true);
    } else {
      if (increaseBtn.isDisabled()) {
        increaseBtn.setDisabled(false);
      }
      if (reduceBtn.isDisabled()) {
        reduceBtn.setDisabled(false);
      }
    }
    viewCtr._recalcAnotherRowQuantity(field, viewCtr.lookupReference('row1'));
  },

  /*重新计算当前行对应的另一行的数量*/
  _recalcAnotherRowQuantity: function(field, fieldCmp) {
    var viewCtr = this;
    var viewModel = viewCtr.getViewModel();
    //var referStore = viewModel.get("referStore");
    var referRecord = viewModel.get("referRecord");
    var value = field.getValue();

    if (!value || value <= 0 || (value >= Number(referRecord.get('A06')))) {
      field.reset();
      return ;
    }

    fieldCmp.setValue(Number(referRecord.get('A06')) - Number(value));
  }

});
