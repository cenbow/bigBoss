/*
 * File: app/view/WhsWindowViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ExpressMgmt.view.WhsChooseWindowViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.whschoosewindow',
  onButtonCancelClick: function (button, e, eOpts) {
    this.getView().close();
  },
  onButtonSelectClick: function () {
    //获取当前viewController，View，ViewModel
    var viewCtr = this;
    var cView = viewCtr.getView();
    var cViewModel = this.getViewModel();

    //获取当前选中行
    var grid = cView.down('grid');
    var selection = grid.getSelectionModel().getSelection();
    if (!selection || !selection.length) {
      Ext.MessageBox.alert('提示', '请选择仓库');
      return;
    }
    var selectedData = selection[0].data;

    //打开目标窗口
    var esWindow = Ext.create('ExpressMgmt.view.ExpressSettingWindow');
    var esViewModel = esWindow.getViewModel();

    //设置目标窗口viewModel
    esViewModel.set('gridStore', cViewModel.get('gridStore'));
    esViewModel.set('whsId', selectedData.id);
    esViewModel.set('whsName', selectedData.name);
    esViewModel.set('logisticsId', cViewModel.get('logisticsId'));
    esViewModel.set('logisticsName', cViewModel.get('logisticsName'));
    esWindow.getController().initPage();
    //关闭当前窗口
    cView.close();
    //展示目标窗口
    esWindow.show();
  },
  itemdblclick: function () {
    this.onButtonSelectClick();
  },
  refreshStore: function () {
    var store = this.getView().down('grid').store;
    store.load();
  }

});
