/*
 * File: app/view/ExpressSettingWindow.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ExpressMgmt.view.ExpressSettingWindow', {
  extend: 'Ext.window.Window',
  alias: 'widget.expresssettingwindow',
  requires: [
    'ExpressMgmt.store.LogisticsStore',
    'ExpressMgmt.view.ExpressSettingWindowViewModel',
    'ExpressMgmt.view.ExpressSettingWindowViewController',
    'Ext.form.FieldSet',
    'Ext.form.field.Text',
    'Ext.grid.Panel',
    'Ext.view.Table',
    'Ext.grid.column.RowNumberer'
  ],
  controller: 'expresssettingwindow',
  viewModel: {
    type: 'expresssettingwindow'
  },
  width: 700,
  height: 600,
  bind: {
    title: '运费设置-{whsName}-{logisticsName}'
  },
  bodyStyle: {
    background: '#fff'
  },
  layout:'fit',
  bodyPadding: 5,
  modal: true,
  autoScroll:true,
  items: [
    {
      xtype: 'panel',
      header: false,
      border: false,
      items: [
        {
          xtype: 'fieldset',
          collapsible: true,
          layout: {
            type: 'table',
            columns: 2,
            tableAttrs: {
              width: '95%',
              height: 100
            }
          },

          title: '默认运费',
          items: {
            xtype: 'form',
            bodyPadding: 10,
            header: false,
            border: false,
            title: 'My Form',
            layout: {
              type: 'table',
              columns: 2,
              tableAttrs: {
                width: '95%'
              }
            },
            items: [
              {
                xtype: 'combobox',
                name: 'valuationType',
                fieldLabel: '物流计费标准',
                dataIndex: 'valuationType',
                editable: false,
                displayField: 'name',
                valueField: 'value',
                queryMode: 'local',
                bind: {
                  store: '{valuationTypeStore}',
                  value: '{fee.valuationType}'
                },
                colspan: 2,
                allowBlank: false,
                blankText: '计费标准不能为空',
                autoLoadOnValue: true,
                listeners: {
                  change: 'onComboboxChange',
                  afterRender: function(combo) {
                    combo.fireEvent('change', combo);
                  }
                }
              },
              {
                xtype: 'numberfield',
                name: 'startStd',
                allowBlank: false,
                blankText: '非空',
                allowDecimals: true,
                minValue: 0,
                minText: '输入值必须大于0',
                bind: {
                  fieldLabel: '{fieldLabel_1}',
                  value: '{fee.startStd}'
                }
              },
              {
                xtype: 'numberfield',
                name: 'startFee',
                align: 'right',
                allowBlank: false,
                blankText: '非空',
                allowDecimals: true,
                minValue: 0,
                minText: '输入值必须大于0',
                bind: {
                  fieldLabel: '{fieldLabel_2}',
                  value: '{fee.startFee}'
                }
              },
              {
                xtype: 'numberfield',
                name: 'addStd',
                align: 'right',
                allowBlank: false,
                blankText: '非空',
                allowDecimals: true,
                minValue: 0,
                minText: '输入值必须大于0',
                bind: {
                  fieldLabel: '{fieldLabel_3}',
                  value: '{fee.addStd}'
                }
              },
              {
                xtype: 'numberfield',
                name: 'addFee',
                align: 'right',
                allowBlank: false,
                blankText: '非空',
                allowDecimals: true,
                minValue: 0,
                minText: '输入值必须大于0',
                bind: {
                  fieldLabel: '{fieldLabel_4}',
                  value: '{fee.addFee}'
                }
              }
            ]
          }
        },
        {
          stateful: false,
          xtype: 'gridpanel',
          title: '特殊地区的运费设置',
          bind: {
            store: '{lineStore}'
          },
          viewConfig: {xtype: 'gridview'},
          selModel: 'cellmodel',
          plugins: {
            ptype: 'cellediting',
            clicksToEdit: 1
          },
          columns: {
            defaults: {
              align: 'center',
              tdCls: 'with-btngroup'
            },
            items: [
              {
                text: '序号',
                xtype: 'rownumberer',
                width: 40
              },
              {
                xtype: 'widgetcolumn',
                width: 35,
                tdCls: 'btngroup',
                widget: {
                  xtype: 'buttongroup',
                  baseCls: '',
                  layout: {
                    type: 'column'
                  },
                  defaults: {
                    handler: 'onCommandColumnClick'
                  },
                  items: [
                    {xtype: 'button', command: 'Delete', iconCls: 'btn-delete'}
                  ]
                }
              }, {
                flex: 1,
                xtype: 'gridcolumn',
                dataIndex: 'areaDesc',
                editor: {
                  xtype: 'textfield',
                  triggers: {
                    mytrigger: {
                      handler: 'onButtonAreaChooseClick',
                      cls: 'x-form-ellipsis-trigger'
                    }
                  }
                },
                text: '地区'

              }, {
                flex: 1,
                xtype: 'gridcolumn',
                dataIndex: 'startStd',
                value: 0,
                editor: {
                  xtype: 'numberfield',
                  minValue: 0,
                },
                bind: {
                  text: '{fieldLabel_1}'
                }
              }, {
                flex: 1,
                xtype: 'gridcolumn',
                dataIndex: 'startFee',
                value: 0,
                editor: {
                  xtype: 'numberfield',
                  minValue: 0,
                },
                bind: {
                  text: '{fieldLabel_2}'
                }
              }, {
                flex: 1,
                xtype: 'gridcolumn',
                dataIndex: 'addStd',
                value: 0,
                editor: {
                  xtype: 'numberfield',
                  minValue: 0,
                },
                bind: {
                  text: '{fieldLabel_3}'
                }
              }, {
                flex: 1,
                xtype: 'gridcolumn',
                dataIndex: 'addFee',
                value: 0,
                editor: {
                  xtype: 'numberfield',
                  minValue: 0,
                },
                bind: {
                  text: '{fieldLabel_4}'
                }
              }]
          },
          dockedItems: [
            {
              xtype: 'toolbar',
              dock: 'top',
              items: [
                {
                  xtype: 'button',
                  iconCls: 'btn-add',
                  width: 60,
                  text: '添加',
                  listeners: {
                    click: 'onButtonLineAddClick'
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  dockedItems: [
    {
      xtype: 'toolbar',
      dock: 'bottom',
      ui: 'footer',
      items: [
        {
          xtype: 'tbfill'
        },
        {
          xtype: 'button',
          handler: 'onButtonSetTemplateClick',
          bind: {
            text: '{setTemplateBtnText}'
          }
        },
        {
          xtype: 'button',
          iconCls: 'btn-edit',
          text: '从模板拷贝',
          handler: 'onButtonCopyClick'
        },
        {
          xtype: 'button',
          iconCls: 'btn-save',
          text: '保存',
          handler: 'onButtonSaveClick'
        },
        {
          xtype: 'button',
          iconCls: 'btn-cancel',
          text: '取消',
          handler: 'onButtonCancelClick'
        }
      ]
    }
  ]

});
