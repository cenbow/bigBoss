/*
 * File: app/view/InfoDialogViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AccountMgmt.view.InfoDialogViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.infodialog',

  requires: [
    'AccountMgmt.view.SelectBranchDeptPositionDialog'
  ],

  init: function() {
    this.getViewModel().set("formData", {
      login: "",
      password: "",
      confirmPassword: "",
      email: "",
      mobile: "",
      branchId:"",
      deptId: "",
      positionId: "",
      memo: "",
      locked: "",
      isAdmin: ""
    });
  },
  /**
   * 分部编辑
   */
  onBranchEditTriggerClick: function (field, trigger, e) {
    var dialog = Ext.create("AccountMgmt.view.SelectBranchDeptPositionDialog", {
        title: "分部信息",
        columnText: "分部",
        store: Ext.getStore("accountMgmt.branchstore")
      });

    dialog.show();
  },

  /**
   * 部门编辑
   */
  onDeptEditTriggerClick: function (field, trigger, e) {
    var dialog = Ext.create("AccountMgmt.view.SelectBranchDeptPositionDialog", {
          title: "部门信息",
          columnText: "部门",
          store: Ext.getStore("accountMgmt.deptstore")
        });

    dialog.show();
  },

  /**
   * 职位编辑
   */
  onPositionEditTriggerClick: function (field, trigger, e) {
    var dialog = Ext.create("AccountMgmt.view.SelectBranchDeptPositionDialog", {
        title: "职位信息",
        columnText: "职位",
        store: Ext.getStore("accountMgmt.positionstore")
      });

    dialog.show();
  },

  /**
   * 保存
   */
  onSaveButtonClick: function (button, e, eOpts) {
    var viewCtr = this,
      currWin = viewCtr.getView(),
      viewModel = this.getViewModel(),
      formCmp = currWin.down("form");

    if (!formCmp.isValid()) {
      TipsUtil.showTips("提示", "信息填写不正确，请检查后重新操作", TipsUtil.WARING);
      return ;
    }

    var formData = viewModel.get("formData");
    console.info(formData);
    var requestFormData = Ext.clone(formData);

    var dialog = viewCtr.getView();
    var newPassword = requestFormData.password;
    var confirmPassword = requestFormData.confirmPassword;

    //console.info(formData.deptId);
    var locked = viewCtr.lookupReference("locked");
    var isAdmin = viewCtr.lookupReference("isAdmin");
    requestFormData.locked = locked.getValue() ? "Y" : "N";
    requestFormData.isAdmin = isAdmin.getValue() ? "Y" : "N";

    //选择地址
    var url = '/api/general';
    if(requestFormData.userId) {
      url += '/user/update/' + requestFormData.userId;
      delete requestFormData.login;
      delete requestFormData.password;
    } else {
      url += '/user/add';
    }

    delete requestFormData.confirmPassword;

    DoActionUtil.request(
        'POST',
        url,
        //viewModel.get("formData"),
      requestFormData,
        function(result) {
          if (result.success) {
            TipsUtil.showTips("提示", result.data, TipsUtil.INFO, function() {
              viewModel.get("mainViewportController")._onFastSearchFn();
              currWin.close();
            });
          } else {
            TipsUtil.showTips("提示", result.error.message, TipsUtil.WARING);
          }
        }
    );
  },


  /**
   * 取消
   */
  onCancelButtonClick: function (button, e, eOpts) {
    var viewCtr = this;

    viewCtr.getView().close();
  }

});
