/*
 * File: app/view/MyViewportViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('StockInvoicingSummary.view.StockInvoicingSummaryViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.stockinvoicingsummary',
    options:{
        empty:function(form){
            form.reset();
            //Ext.data.StoreManager.getByKey('commonwhsareastore').removeAll();
            var store = Ext.data.StoreManager.getByKey('GridStore');
            store.getProxy().extraParams = {};
            store.load();
        },
        query:function(form){
            if (!form.isValid()) {
                Ext.MessageBox.show({
                    title : '错误',
                    headerPosition: 'bottom',
                    modal: true,
                    msg : '查询条件格式不正确.',
                    buttons : Ext.MessageBox.OK,
                    icon : Ext.MessageBox.WARNING
                });
                return;
            }

            var formData = form.getValues();
            if(!formData.startTime){
                delete formData.startTime
            }
            if(!formData.endTime){
                delete formData.endTime
            }
            var store = Ext.data.StoreManager.getByKey('GridStore');
            store.getProxy().extraParams = formData;
            store.load()
        }
    },

    onButtonGoodsChooseClick:function(field){
        var dialog = Ext.create('Common.view.GoodsChooseDialog',{
            callback:function(records){
                var arr = [];
                if(!records){
                    return;
                }
                Ext.Array.each(records,function(record){
                    arr.push(record.skuCode);
                });

                field.setValue(arr.join(','));
            }
        });
        var dialogStore = dialog.getViewModel().get("gridStore");
        dialogStore.load();
        dialog.show();
    },

    onCommandColumnClick:function(button){
        Ext.isFunction(this.options[button.command])
        &&this.options[button.command](this.lookupReference('form'));
    }

});
