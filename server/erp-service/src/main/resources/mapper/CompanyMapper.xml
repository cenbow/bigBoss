<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junyi.erp.domain.Company" >
  <resultMap id="CompanyMap" type="Company" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="SHORT_NAME" property="shortName" jdbcType="VARCHAR" />
    <result column="INTRODUCE" property="introduce" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="CREATE_BY" property="createBy" jdbcType="INTEGER" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_BY" property="updateBy" jdbcType="INTEGER" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="RESERVE1" property="reserve1" jdbcType="VARCHAR" />
    <result column="RESERVE2" property="reserve2" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    ID, NAME, CODE, SHORT_NAME, INTRODUCE, ADDRESS, PHONE, CREATE_BY, CREATE_DATE, UPDATE_BY, 
    UPDATE_DATE, REMARK, RESERVE1, RESERVE2
  </sql>

  <select id="selectCompanyByPK" resultMap="CompanyMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from company
    where ID = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteCompanyByPK" parameterType="java.lang.Integer" >
    delete from company
    where ID = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertCompany" parameterType="Company" >
    insert into company (ID, NAME, CODE, 
      SHORT_NAME, INTRODUCE, ADDRESS, 
      PHONE, CREATE_BY, CREATE_DATE, 
      UPDATE_BY, UPDATE_DATE, REMARK, 
      RESERVE1, RESERVE2)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{shortName,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR})
  </insert>

  <update id="updateCompany" parameterType="Company" >
    update company
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null" >
        SHORT_NAME = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        INTRODUCE = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        CREATE_BY = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        UPDATE_BY = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        RESERVE1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        RESERVE2 = #{reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Company" >
    update company
    set NAME = #{name,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR},
      SHORT_NAME = #{shortName,jdbcType=VARCHAR},
      INTRODUCE = #{introduce,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      CREATE_BY = #{createBy,jdbcType=INTEGER},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=INTEGER},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR},
      RESERVE1 = #{reserve1,jdbcType=VARCHAR},
      RESERVE2 = #{reserve2,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="listAllCompany" resultMap="CompanyMap">
    select <include refid="Base_Column_List"/>
    from company
    order by ID
  </select>

  <select id="selectCompanyByFiltersPage" resultMap="CompanyMap" parameterType="Map">
    select <include refid="Base_Column_List"/>
    from company
    <where>
      <if test="text != null and text != ''">
        (NAME LIKE CONCAT ('%', #{text,jdbcType=VARCHAR}, '%')
        or CODE LIKE CONCAT ('%', #{lowerText,jdbcType=VARCHAR}, '%')
        )
      </if>
    </where>
    order by ID asc
  </select>
</mapper>