/*
 * File: app/view/MainViewportViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MarketInfoMgmt.view.MainViewportViewController', {
  extend: 'Ext.app.ViewController',
  alias: 'controller.mainviewport',

  requires: [
    'MarketInfoMgmt.view.InfoDialog',
  ],

  init: function () {
    var store = Ext.create('MarketInfoMgmt.store.CategoryComboboxStore');
    var login = JSON.parse(localStorage.getItem("login"));
    if(!login){
      window.location.replace(FACADE_URL+'/login.html');
    }
  },

  /**
   * 添加用户
   */
  onAddUserButtonClick: function (btn) {

  },

  /**
   * 快速搜索
   */
  onFastQueryButtonClick: function (field, trigger, e) {
    var viewCtr = this,
      viewModel = viewCtr.getViewModel();
    viewModel.getStore('gridstore').load();
  },

  /**
   * 快速搜索回车
   */
  onFastSearchTextFieldSpecialKey: function (field, e, options) {

    var viewCtr = this,
      viewModel = viewCtr.getViewModel();
    if (e.getKey() === e.ENTER) {
      viewModel.getStore('gridstore').load();
    }

  },

  /**
   * grid记录双击
   */
  onGridpanelItemDblClick: function (dataview, record, item, index, e, eOpts) {
    Ext.Msg.alert('事件触发', 'grid记录双击');
  },

  /**
   * 主页命令行操作
   */
  onCommandColumnClick: function (btn, event) {
    var viewCtr = this,
      viewModel = viewCtr.getViewModel(),
      command = btn.command,
      grid = viewCtr.lookupReference("infoDisclosureMgmtGrid"),
      record = btn.ownerCt.getWidgetRecord();

    event.stopEvent();
    grid.getSelectionModel().select(record);

    if (command == 'Update') {
      viewCtr._openInfoDialog(record, 'update');
    } else if (command == 'View') {
      viewCtr._openInfoDialog(record, 'view');
    } else if (command == 'Delete') {
      viewCtr._deleteRecord(record);
    } else if (command == 'AddPDF') {
      viewCtr._openPDFDialog(record);
    } else if (command == 'DeletePDF') {
      var id = record.getData().id;
      var fileName = record.get('url');
      if(fileName == null){
        TipsUtil.showTips('错误', '该记录没有附件');
        return;
      }
      var str = fileName.substr(fileName.indexOf('-')+1)+'.pdf';
      Ext.MessageBox.confirm('提示', '确认删除附件:【' + str + '】吗？', function (option) {
        if (option === 'yes') {
          Ext.Ajax.request({
            method: 'POST',
            url: FACADE_URL + '/information/deleteFile',
            params: {
              id: id
            },
            success: function (request) {
              if (request.responseText) {
                var json = Ext.decode(request.responseText);
                if (json.success) {
                  TipsUtil.showTips("提示", json.data, TipsUtil.WARING);
                  viewModel.getStore('gridstore').load();
                } else {
                  TipsUtil.showTips('错误', json.error.message || '服务器错误！');
                }
              }
            }
          });
        }
      });
    }
  },

  addClick: function () {
    var dialog = Ext.create("MarketInfoMgmt.view.InfoDialog", {}),
      dialogViewModel = dialog.getViewModel();
    dialogViewModel.set("mainViewportController", this);
    dialog.show();
  },

  _openPDFDialog: function (record, type) {
    var viewCtr = this,
      dialog = Ext.create("MarketInfoMgmt.view.PDFDialog", {}),
      dialogViewModel = dialog.getViewModel();

    dialogViewModel.set("mainViewportController", viewCtr);
    var formData = dialogViewModel.get("formData");
    formData.id = record.getData().id;
    dialog.getViewModel().set("formData", formData);//数据回现
    dialog.show();
  },


  /**
   * 信息窗口：修改
   * @param record
   * @private
   */
  _openInfoDialog: function (record, type) {
    var viewCtr = this,
      dialog = Ext.create("MarketInfoMgmt.view.InfoDialog", {}),
      dialogViewModel = dialog.getViewModel();


    dialogViewModel.set("mainViewportController", viewCtr);

    if (type == 'view') {
      dialogViewModel.set("isView", true);
      var fileName = record.get('url');
      if(fileName){
        var str = fileName.substr(fileName.indexOf('-')+1)+'.pdf';
        var href = FACADE_URL + '/generic/web/viewer.html?file=' + FACADE_URL + '/information/download/' + fileName;
        var displayfield = new Ext.form.DisplayField({
          name:"content",
          fieldLabel:"附件",
          value:"<a href='" +href+"' target='_blank'>" + str +"</a>"
        });
        dialog.lookupReference('form').add(displayfield);
      }
    }

    var formData = dialogViewModel.get("formData");
    formData.id = record.getData().id;
    formData.name = record.getData().name;
    formData.levelOne = record.getData().levelOne;
    formData.levelTwo = record.getData().levelTwo;
    formData.companyId = record.getData().companyId;
    formData.companyName = record.getData().companyName;
    formData.text = record.getData().text;
    var store = dialog.getViewModel().getStore('categorybyupclassidcomboboxstore');
    if (store) {
      store.load({
        params: {id: record.data.levelOne}
      });
    }
    dialog.getViewModel().set("formData", formData);//数据回现
    dialog.show();
  },


  /**
   * 是否启用
   */
  cellclick: function (tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
    var viewModel = this.getViewModel();
    if (tableview.getGridColumns()[cellIndex].dataIndex == "name") {
      //下载
      //window.location.href = "http://localhost:8080/facade/information/download";
      /*var url = record.getData().url;
      if (url) {
        window.open(FACADE_URL + '/generic/web/viewer.html?file=' + FACADE_URL + '/information/download/' + url, 'PDF', 'width:50%;height:50%;top:100;left:100;');
      } else {
        TipsUtil.showTips("错误", '未上传附件或附件已删除');
      }*/

    } else if (tableview.getGridColumns()[cellIndex].dataIndex == "status") {
      Ext.Msg.confirm("温馨提示", "确定要更新状态吗?",
        function (btn) {
          if (btn == 'yes') {
            Ext.Ajax.request({
              url: FACADE_URL + '/information/changeStatus',
              params: {
                id: record.get("id"),
                status: record.get("status") === 1 ? 0 : 1
              },
              method: 'POST',
              success: function (response) {
                if (response.responseText) {
                  var json = Ext.decode(response.responseText);
                  if (json.success) {
                    record.set('status', record.get("status") === 1 ? 0 : 1);
                    viewModel.getStore('gridstore').load();
                  } else {
                    TipsUtil.showTips("错误", json.error.message || "服务器错误！");
                  }
                }
              }
            });
          }
        });
    }
  },

  /**
   * 删除一条记录
   * @param record 当前选中记录
   * @private
   */
  _deleteRecord: function (record) {
    Ext.Msg.confirm("温馨提示", "确定要删除该账号吗?",
      function (btn) {
        if (btn == 'yes') {
          Ext.Ajax.request({
            url: FACADE_URL + '/infoDisclosure/delete/' + record.getData().id,
            params: {},
            method: 'GET',
            success: function (response) {
              var data = Ext.decode(response.responseText).data;
              TipsUtil.showTips("提示", data, TipsUtil.INFO);
              Ext.StoreMgr.get('mainViewPortGridStore').load();
            },
            failure: function (response, options) {
              Ext.Msg.alert('错误', Ext.util.JSON.decode(response.responseText));
            }
          });
        }
      }
    )

  }


});
